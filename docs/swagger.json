{
    "swagger": "2.0",
    "info": {
        "description": "version 1 of api",
        "title": "Documenting API (SavannahTech Task)",
        "contact": {
            "name": "Oladeji Oluwafemi",
            "url": "https://github.com/djfemz",
            "email": "oladejifemi00@gmail.com"
        },
        "version": "1"
    },
    "host": "localhost:8082",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/repositories/:repo": {
            "get": {
                "description": "Used to Add Repository to the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Repository"
                ],
                "summary": "Used to Add Repository to the application",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of Authors",
                        "name": "repo",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BaseResponse"
                        }
                    }
                }
            }
        },
        "/commits/authors/top": {
            "get": {
                "description": "Get top N commit Authors where N is a number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authors"
                ],
                "summary": "Get top N commit Authors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of Authors",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.AuthorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/appErrors.authorsNotFound"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/appErrors.authorsNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/appErrors.authorsNotFound"
                        }
                    }
                }
            }
        },
        "/commits/since": {
            "get": {
                "description": "Get all commits starting from the date supplied in the format (MM-DD-YYYY)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Commits"
                ],
                "summary": "Get commits by date",
                "parameters": [
                    {
                        "type": "string",
                        "description": "date",
                        "name": "since",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.CommitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/appErrors.commitNotFound"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/appErrors.commitNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/appErrors.commitNotFound"
                        }
                    }
                }
            }
        },
        "/commits/{repo}": {
            "get": {
                "description": "Get all commits for repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Commits"
                ],
                "summary": "Get commits for repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Name",
                        "name": "repo",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.CommitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/appErrors.commitNotFound"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/appErrors.commitNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/appErrors.commitNotFound"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "appErrors.authorsNotFound": {
            "type": "object"
        },
        "appErrors.commitNotFound": {
            "type": "object"
        },
        "dtos.AuthorResponse": {
            "type": "object",
            "properties": {
                "commit_count": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dtos.BaseResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.CommitResponse": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "author_email": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}